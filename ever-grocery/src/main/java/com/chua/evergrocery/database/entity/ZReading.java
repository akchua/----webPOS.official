package com.chua.evergrocery.database.entity;import javax.persistence.Basic;import javax.persistence.Column;import javax.persistence.Entity;import javax.persistence.Table;import javax.persistence.Transient;import com.chua.evergrocery.utility.format.CurrencyFormatter;import com.chua.evergrocery.utility.format.DateFormatter;import com.chua.evergrocery.utility.format.NumberFormatter;/** * @author  Adrian Jasper K. Chua * @version 1.0 * @since   22 Mar 2019 */@Entity(name = "ZReading")@Table(name = ZReading.TABLE_NAME)public class ZReading extends Reading {	private static final long serialVersionUID = 8663518997826359077L;		public static final String TABLE_NAME = "z_reading";		private Long counter;		private Long beginningSIN;		private Long endingSIN;		private Long beginningRefundNumber;		private Long endingRefundNumber;		private Float vatSales;		private Float vatExSales;		private Float zeroRatedSales;		private Float vatDiscount;		private Float vatExDiscount;		private Float zeroRatedDiscount;		private Float beginningRefundAmount;		private Float specialDiscountVatAdjustment;		@Transient	public String getFormattedReadingDate() {		return DateFormatter.prettyFormat(getReadingDate());	}		@Basic	@Column(name = "counter")	public Long getCounter() {		return counter;	}	public void setCounter(Long counter) {		this.counter = counter;	}	@Basic	@Column(name = "beginning_SIN")	public Long getBeginningSIN() {		return beginningSIN;	}		@Transient	public String getFormattedBeginningSIN() {		return NumberFormatter.SINFormat(getBeginningSIN());	}	public void setBeginningSIN(Long beginningSIN) {		this.beginningSIN = beginningSIN;	}	@Basic	@Column(name = "ending_SIN")	public Long getEndingSIN() {		return endingSIN;	}		@Transient	public String getFormattedEndingSIN() {		return NumberFormatter.SINFormat(getEndingSIN());	}		@Transient	public Long getNumberOfReceipts() {		return getEndingSIN() - getBeginningSIN() + 1;	}	public void setEndingSIN(Long endingSIN) {		this.endingSIN = endingSIN;	}	@Basic	@Column(name = "beg_refund_number")	public Long getBeginningRefundNumber() {		return beginningRefundNumber;	}		@Transient	public String getFormattedBeginningRefundNumber() {		return NumberFormatter.SINFormat(getBeginningRefundNumber());	}	public void setBeginningRefundNumber(Long beginningRefundNumber) {		this.beginningRefundNumber = beginningRefundNumber;	}	@Basic	@Column(name = "end_refund_number")	public Long getEndingRefundNumber() {		return endingRefundNumber;	}		@Transient	public String getFormattedEndingRefundNumber() {		return NumberFormatter.SINFormat(getEndingRefundNumber());	}		@Transient	public Long getNumberOfRefunds() {		return getEndingRefundNumber() - getBeginningRefundNumber();	}	public void setEndingRefundNumber(Long endingRefundNumber) {		this.endingRefundNumber = endingRefundNumber;	}		@Override	@Transient	public Float getGrossSales() {		return getNetSales() + getZeroRatedRemovedVat() + getTotalDiscountAmount() - getRefundAmount() + (getVatExSales() * 0.12f);	}		@Basic	@Column(name = "vat_sales")	public Float getVatSales() {		return vatSales;	}		@Transient	public Float getNetVatSales() {		return vatSales - vatDiscount;	}		@Transient	public String getFormattedNetVatSales() {		return CurrencyFormatter.pesoFormat(getNetVatSales());	}		@Transient	public String getFormattedNetVatableSales() {		return CurrencyFormatter.pesoFormat(getNetVatSales() / 1.12f);	}		@Transient	public Float getNetVatAmount() {		return getNetVatSales() - (getNetVatSales() / 1.12f);	}	@Transient	public String getFormattedNetVatAmount() {		return CurrencyFormatter.pesoFormat(getNetVatSales() - (getNetVatSales() / 1.12f));	}		public void setVatSales(Float vatSales) {		this.vatSales = vatSales;	}	@Basic	@Column(name = "vat_ex_sales")	public Float getVatExSales() {		return vatExSales;	}		@Transient	public String getFormattedVatExSales() {		return CurrencyFormatter.pesoFormat(getVatExSales());	}		@Transient	public Float getNetVatExSales() {		return vatExSales - vatExDiscount;	}		@Transient	public String getFormattedNetVatExSales() {		return CurrencyFormatter.pesoFormat(getNetVatExSales());	}	public void setVatExSales(Float vatExSales) {		this.vatExSales = vatExSales;	}	@Basic	@Column(name = "zero_rated_sales")	public Float getZeroRatedSales() {		return zeroRatedSales;	}		@Transient	public String getFormattedZeroRatedSales() {		return CurrencyFormatter.pesoFormat(getZeroRatedSales());	}		@Transient	public Float getNetZeroRatedSales() {		return zeroRatedSales - zeroRatedDiscount;	}		@Transient	public String getFormattedNetZeroRatedSales() {		return CurrencyFormatter.pesoFormat(getNetZeroRatedSales());	}	public void setZeroRatedSales(Float zeroRatedSales) {		this.zeroRatedSales = zeroRatedSales;	}	@Basic	@Column(name = "vat_discount")	public Float getVatDiscount() {		return vatDiscount;	}	public void setVatDiscount(Float vatDiscount) {		this.vatDiscount = vatDiscount;	}	@Basic	@Column(name = "vat_ex_discount")	public Float getVatExDiscount() {		return vatExDiscount;	}	public void setVatExDiscount(Float vatExDiscount) {		this.vatExDiscount = vatExDiscount;	}	@Column(name = "zero_rated_discount")	public Float getZeroRatedDiscount() {		return zeroRatedDiscount;	}	public void setZeroRatedDiscount(Float zeroRatedDiscount) {		this.zeroRatedDiscount = zeroRatedDiscount;	}		@Transient	@Override	public Float getNetSales() {		return getNetVatSales() + getNetVatExSales() + getNetZeroRatedSales();	}	@Transient	public String getFormattedNetSales() {		return CurrencyFormatter.pesoFormat(getNetSales());	}		@Transient	public Float getNetOfVatSales() {		return getNetSales() - getNetVatAmount();	}		@Transient	public String getFormattedNetOfVatSales() {		return CurrencyFormatter.pesoFormat(getNetOfVatSales());	}	@Basic	@Column(name = "beginning_refund_amount")	public Float getBeginningRefundAmount() {		return beginningRefundAmount;	}	@Transient	public String getFormattedBeginningRefundAmount() {		return CurrencyFormatter.pesoFormat(getBeginningRefundAmount());	}	@Transient	public Float getEndingRefundAmount() {		return getBeginningRefundAmount() + getRefundAmount();	}	@Transient	public String getFormattedEndingRefundAmount() {		return CurrencyFormatter.pesoFormat(getEndingRefundAmount());	}	public void setBeginningRefundAmount(Float beginningRefundAmount) {		this.beginningRefundAmount = beginningRefundAmount;	}	@Basic	@Column(name = "sd_vat_adjustment")	public Float getSpecialDiscountVatAdjustment() {		return specialDiscountVatAdjustment;	}		@Transient	public String getFormattedSpecialDiscountVatAdjustment() {		return CurrencyFormatter.pesoFormat(specialDiscountVatAdjustment);	}		@Transient	public String getFormattedNetTotalSpecialDiscountAmount() {		return CurrencyFormatter.pesoFormat(getTotalSpecialDiscountAmount() - specialDiscountVatAdjustment);	}	public void setSpecialDiscountVatAdjustment(Float specialDiscountVatAdjustment) {		this.specialDiscountVatAdjustment = specialDiscountVatAdjustment;	}}